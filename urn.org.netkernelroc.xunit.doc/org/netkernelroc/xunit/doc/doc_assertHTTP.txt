
= HTTP Protocol Assertions =

Provides assertions that validation facets of the HTTP protocol response to a test request.
You are able to assert the HTTP return code, headers, etc.

== Setup ==
To use the HTTP protocol assertions, you must import the module '''urn:org:netkernelroc:xunit'''.

{xml}
<import>
  <uri>urn:org:netkernelroc:xunit</uri>
</import>
{/xml}

and import the test library in your testlist document:

{xml}
<testlist>
  <import>res:/org/netkernelroc/xunit/netkernelrocAssertLibrary.xml</import>
</testlist>
{/xml}


== Assertions ==

All image assertion tests can be specified within a single image assertion declaration. The valid tests
are:

* '''returnCode''' - asserts the value of the HTTP return code (e.g. 200)




== Examples ==


An example test would look like this:

{xml}
<testlist>
  <import>res:/org/netkernelroc/netkernel/xunit/assertions/netkernelrocAssertLibrary.xml</import>

  <test>
  <request>
    <identifier>active:httpGet</identifier>
    <argument name="url">http://www.bestbuy.com</argument>
  </request>
  <assert>
    <http>
      <assertions>
        <returnCode>200</returnCode>
        <Cache-Control>86400</Cache-Control>
        <Date/>
      </assertions>
    </http>
  </assert>
  </test>
</testlist>
{/xml}

This test issues a HTTP GET request to the URL ''www.bestbuy.com'' and tests
for the return code for the value 200, a Cache-Control header with the value 86400,
and the existence of the Date header.


The library contains one assertion for each standard response header as well
as the return code.
Each test can be for just the existence of the header information as
well as the specific contents.
When testing for the contents, the provided value is interpreted as a regular expression.

All assertions work the same way and some of them have detailed documentation below.


The library supplies the following additional assertions:

=== httpReturnCode ===

The HTTP response can be tested against a three character literal or a regular expression
pattern.

For example, to test for the return code ''200'', use the following assertion:

{xml}
<httpReturnCode>200</httpReturnCode>
{/xml}

To test for any return code in the "200 family", use the following assertion:

{xml}
<httpReturnCode>2..</httpReturnCode>
{/xml}

=== Accept-Ranges ===
=== Age ===
=== Allow ===



=== Cache-Control ===

The HTTP response can be tested for the presence and value of the ''Cache-Control'' header.
Simple include an empty tag to test for the presence of the header
or include the literal value or a regular expression pattern.

For example, to test for the presence of the ''Cache-Control'' header:

{xml}
<Cache-Control/>
{/xml}

To test for a particular value in the ''Cache-Control'' header:

{xml}
<Cache-Control>86400</Cache-Control>
{/xml}

=== Connection ===
=== Content-Encoding ===
=== Content-Language ===
=== Content-Length ===
=== Content-Location ===
=== Content-MD5 ===
=== Content-Disposition ===
=== Content-Range ===
=== Content-Type ===
=== Date ===
=== ETag ===
=== Expires ===
=== LastModified ===
=== Link ===
=== Location ===

The HTTP response can be tested for the presence and value of the ''Location'' header.
Simple include an empty tag to test for the presence of the header
or include the literal value or a regular expression pattern.

For example, to test for the presence of the ''Location'' header:

{xml}
<Location/>
{/xml}

To test for a particular value in the ''Location'' header:

{xml}
<Location>http://www.databliss.net/contact</Location>
{/xml}


=== P3P ===
=== Pragma ===
=== Proxy-Authenticate ===
=== Refresh ===
=== Retry-After ===
=== Server ===
=== Set-Cookie ===
=== Strict-Transport-Security ===
=== Trailer ===
=== Transfer-Encoding ===
=== Vary ===
=== Via ===
=== Warning ===
=== WWW-Authenticate ===



