


= XML Structure Assertions using CSS Selectors =

Provides an assertion to validate the structure of an XML document using CSS3 selectors.
If you need to validate the content of an XML document, please see the
[doc:mod:xml:core:assert:library|XPath validator].

== Setup ==
To use the XML structure assertions, you must import the module '''urn:org:netkernelroc:xunit'''.

{xml}
<import>
  <uri>urn:org:netkernelroc:xunit</uri>
</import>
{/xml}

and import the test library in your testlist document:

{xml}
<testlist>
  <import>res:/org/netkernelroc/xunit/netkernelrocAssertLibrary.xml</import>
</testlist>
{/xml}

== Assertions ==

All XML structure assertion test can be specified within a single ''css'' assertion declaration.
The valid test is:

* '''css''' - asserts the number of XML node selected by the CSS3 selector grammar.

An assertion requires two parts - the CSS3 selector and an integer.
The two parts are separated by the forward-slash character (/):

{xml}
<css>{css3 selector}/{integer}</css>
{/xml}

The assertion will apply the CSS3 selector to the XML document returned by
the XUnit request,
count the number of elements returned by the selector, and compare that
number to the supplied integer value.
If the number of selected elements matches the integer value, the assertion
returns TRUE, otherwise it returns FALSE.

CSS3 selectors are easy to understand and relatively powerful. Documentation can be found
in numerous documents on the Web, including [http://www.w3.org/TR/selectors/].



== Examples ==

An example test could use the following XML document


{xml}
<customer>
  <name>BestBuy</name>
  <address>
  </address>
  <address>
  </address>
</customer>
{/xml}

and would have the following assertions be true:

{xml}
<css_xml>
  <assertions>
    <css>name/1</css>
    <css>address/2</css>
  </assertions>
</css_xml>
{/xml}


Testing HTML requires a conversion to properly formed XML which can be
done with the TagSoup service.
The following complete test specification illustrates how to assert
that the BestBuy.com website home page includes a single ''head'' element:

{xml}
<testlist>
  <import>res:/org/netkernelroc/netkernel/xunit/assertions/netkernelrocAssertLibrary.xml</import>
</testlist>
{/xml}

An example test would look like this:

{xml}
<testlist>
  <import>res:/org/netkernelroc/netkernel/xunit/assertions/netkernelrocAssertLibrary.xml</import>

   <test>
      <request>
        <identifier>active:tagSoup</identifier>
        <argument name="operand">
          <request>
            <identifier>active:httpGet</identifier>
            <argument name="url">http://www.bestbuy.com</argument>
          </request>
        </argument>
      </request>
      <assert>
        <css_xml>
          <assertions>
            <css>head/1</css>
          </assertions>
        </css_xml>
      </assert>
    </test>

</testlist>
{/xml}
