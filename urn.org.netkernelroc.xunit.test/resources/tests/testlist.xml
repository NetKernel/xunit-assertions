<testlist>
  <import>res:/org/netkernelroc/xunit/netkernelrocAssertLibrary.xml</import>


  <test name="CSS Assertion Test">
    <request>
      <identifier>res:/resources/representations/test.html</identifier>
    </request>
    <assert>
      <css_xml>
        <assertions>
          <css>* / 251</css>
          <css>:root/ 1</css>
          <css>:empty/ 2</css>
          <css>div:first-child/ 51</css>
          <css>div:nth-child(even)/ 106</css>
          <css>div:nth-child(2n)/ 106</css>
          <css>div:nth-child(odd)/ 137</css>
          <css>div:nth-child(2n+1)/ 137</css>
          <css>div:nth-child(n)/ 243</css>
          <css>script:first-of-type/ 1</css>
          <css>div:last-child/ 53</css>
          <css>script:last-of-type/ 1</css>
          <css>script:nth-last-child(odd)/ 1</css>
          <css>script:nth-last-child(even)/ 1</css>
          <css>script:nth-last-child(5)/ 0</css>
          <css>script:nth-of-type(2)/ 1</css>
          <css>script:nth-last-of-type(n)/ 2</css>
          <css>div:only-child/ 22</css>
          <css>meta:only-of-type/ 1</css>
          <css>div > div/ 242</css>
          <css>div + div/ 190</css>
          <css>div ~ div/ 190</css>
          <css>body/ 1</css>
          <css>body div/ 243</css>
          <css>div/ 243</css>
          <css>div div/ 242</css>
          <css>div div div/ 241</css>
          <css>div, div, div/ 243</css>
          <css>div, a, span/ 243</css>
          <css>.dialog/ 51</css>
          <css>div.dialog/ 51</css>
          <css>div .dialog/ 51</css>
          <css>div.character, div.dialog/ 99</css>
          <css>#speech5/ 1</css>
          <css>div#speech5/ 1</css>
          <css>div #speech5/ 1</css>
          <css>div.scene div.dialog/ 49</css>
          <css>div#scene1 div.dialog div/ 142</css>
          <css>#scene1 #speech1/ 1</css>
          <css>div[class]/ 103</css>
          <css>div[class=dialog]/ 50</css>
          <css>div[class^=dia]/ 51</css>
          <css>div[class$=log]/ 50</css>
          <css>div[class*=sce]/ 1</css>
          <css>div[class|=dialog]/ 50</css>
          <css>div[class~=dialog]/ 51</css>
          <css>head > :not(meta)/ 2</css>
          <css>head > :not(:last-child)/ 2</css>
          <css>div:not(div.dialog)/ 192</css>
        </assertions>
      </css_xml>
    </assert>
  </test>

  <test name="Anton Bug Test">
    <request>
      <identifier>res:/resources/representations/anton-bug.xml</identifier>
    </request>
    <assert>
      <css_xml>
        <assertions>
          <css>token[tag^=l] + token/3</css>
          <css>token[tag^=l] ~ token/6</css>
        </assertions>
      </css_xml>
    </assert>
  </test>


  <test name="RDF assertion testing">
    <request>
      <identifier>rdf:/person.ttl</identifier>
    </request>
    <assert>
      <rdf>
        <assertions>
          <tripleCount>4</tripleCount>
        </assertions>
      </rdf>
    </assert>
  </test>


  <!-- Uncomment to include this HTML content test -->
  <!--
  <test name="Does BestBuy.com have a single head element?">
    <request>
      <identifier>active:tagSoup</identifier>
      <argument name="operand">
        <request>
          <identifier>active:httpGet</identifier>
          <argument name="url">http://www.bestbuy.com</argument>
        </request>
      </argument>
    </request>
    <assert>
      <css>head/1</css>
    </assert>
  </test>
  -->


  <test name="Image Assertion Test as ImageAspect">
    <request>
      <identifier>res:/resources/images/logo.png</identifier>
      <representation>org.netkernel.image.rep.ImageAspect</representation>
    </request>
    <assert>
      <notNull/>
      <image>
        <assertions>
          <height>54</height>
          <width>80</width>
        </assertions>
      </image>
    </assert>
  </test>

  <test name="Image Assertion Test without transreption">
    <request>
      <identifier>res:/resources/images/logo.png</identifier>
    </request>
    <assert>
      <notNull/>
      <image>
        <assertions>
          <height>54</height>
          <width>80</width>
        </assertions>
      </image>
    </assert>
  </test>


  <test name="Image Assertion Test for redbox.jpg">
    <request>
      <identifier>res:/resources/images/redbox.jpg</identifier>
    </request>
    <assert>
      <notNull/>
      <image>
        <assertions>
          <width>400</width>
          <height>326</height>
        </assertions>
      </image>
    </assert>
  </test>

  <!-- TODO: Figure out HTTP testing fulcrum approach -->
  <!--
  <test name="Image Assertion Test for redbox.jpg via HTTP">
    <request>
      <identifier>active:httpGet+url@http://localhost:8081/org/netkernelroc/netkernel/xunit/assertions/test/images/redbox.jpg</identifier>
    </request>
    <assert>
      <notNull />
      <image>
        <assertions>
          <width>400</width>
          <height>326</height>
        </assertions>
      </image>
    </assert>
  </test>

  <test name="Image Assertion Test for redbox.png via HTTP">
    <request>
      <identifier>active:httpGet+url@http://localhost:8081/org/netkernelroc/netkernel/xunit/assertions/test/images/redbox.png</identifier>
    </request>
    <assert>
      <notNull />
      <image>
        <assertions>
          <width>400</width>
          <height>326</height>
        </assertions>
      </image>
    </assert>
  </test>
  -->

  <test name="Image Assertion Color Test">
    <request>
      <identifier>res:/resources/images/redbox.jpg</identifier>
    </request>
    <assert>
      <notNull/>
      <image>
        <assertions>
          <color>{"x":1,"y":1,"red":254, "green":0, "blue":0}</color>
          <color>{"x":2,"y":1,"red":254, "green":0, "blue":0}</color>
        </assertions>
      </image>
    </assert>
  </test>

  <test name="Image Assertion Equality Test">
    <request>
      <identifier>res:/resources/images/redbox.jpg</identifier>
    </request>
    <assert>
      <image>
        <assertions>
          <equals>res:/resources/images/redbox.png</equals>
        </assertions>
      </image>
    </assert>
  </test>

  <test name="HTTP Return Code test - 200">
    <request>
      <identifier>active:httpGet+url@http://localhost:10888/reflect/returnCode/200</identifier>
    </request>
    <assert>
      <http>
        <assertions>
          <returnCode>200</returnCode>
          <Last-Modified/>
        </assertions>
      </http>
    </assert>
  </test>

</testlist>